// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
 id        Int      @id @default(autoincrement())
 name      String
 email     String   @unique
 password String
 profilePicture String?
 emailConfirmed Boolean @default(false)
 emailToken String?
}

model Appointment {
 id          Int      @id @default(autoincrement())
 userId      Int
 time        String
 date        DateTime
 usedTime    Int
 confirmed   Boolean @default(false)
 customer Customer?
}

model Customer {
  id Int @id @default(autoincrement())
  email String
  name String
  phone String
  appointment Appointment @relation(fields: [scheduleId], references: [id] )
  scheduleId Int @unique
}

model Service {
 id          Int            @id @default(autoincrement())
 userId      Int
 name        String
 description String
 duration    Int
 price       Float?
 availabilities Availability[]
}

model UserAvailability {
 id      Int    @id @default(autoincrement())
 userId Int
 availabilities Availability[]
}

model Availability {
 id                 Int                 @id @default(autoincrement())
 date               DateTime
 hour               String
 minute             String
 service            Service?             @relation(fields: [serviceId], references: [id])
 serviceId          Int?
 userAvailability   UserAvailability?   @relation(fields: [userAvailabilityId], references: [id])
 userAvailabilityId Int?
}

